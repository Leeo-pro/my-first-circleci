---
- name: Check if nginx is installed
  become: true
  become_user: root
  command: nginx -version
  ignore_errors: true
  register: nginx_check

- name: Install nginx if not installed
  become: true
  yum:
    name: nginx
    state: present
  when: nginx_check.rc != 0

- name: Enable nginx1 repository
  become: true
  command: amazon-linux-extras install -y nginx1
  when: nginx_check.rc != 0
  register: nginx_install
  ignore_errors: true

- name: Install nginx using yum module (latest version)
  become: true
  yum:
    name: nginx
    state: latest

- name: Debug nginx installation result
  debug:
    msg: "{{ nginx_install }}"

- name: Copy development.rb configuration
  become: true
  template:
    src: development.rb.j2
    dest: "{{ sample_app_dir }}/config/environments/development.rb"

- name: Copy nginx app configuration file
  become: true
  template:
    src: puma.conf.j2
    dest: /etc/nginx/conf.d/puma.conf

- name: Copy nginx general configuration file
  become: true
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf

- name: Copy puma.service configuration
  become: true
  template:
    src: puma.service.sample.j2
    dest: /etc/systemd/system/puma.service

- name: Copy storage.yml configuration
  become: true
  template:
    src: storage.yml.j2
    dest: "{{ sample_app_dir }}/config/storage.yml"

- name: Update directory path in puma.rb
  become: true
  lineinfile:
    path: /home/ec2-user/raisetech-live8-sample-app/config/puma.rb
    insertafter: '^# directory "/var/www/rails/raisetech-live8-sample-app"$'
    line: ' directory "/home/ec2-user/raisetech-live8-sample-app"'

- name: Start and enable nginx
  become: true
  service:
    name: nginx
    state: started
    enabled: true

- name: Install gems with bundle
  become: true
  shell: bash -lc "bundle install"
  args:
    chdir: "{{ sample_app_dir }}"

- name: Install Rails gem
  become: true
  shell: "/home/ec2-user/.rbenv/shims/gem install rails"
  environment:
    PATH: "{{ ansible_env.PATH }}:/home/ec2-user/.rbenv/shims:/home/ec2-user/.rbenv/bin"
    RBENV_ROOT: "/home/ec2-user/.rbenv"

- name: Setup the deploy environment
  become: true
  shell: bash -lc "bin/setup"
  args:
    chdir: "{{ sample_app_dir }}"
  ignore_errors: true

- name: Copy application.rb for Rails
  become: true
  template:
    src: application.rb.j2
    dest: "{{ sample_app_dir }}/config/application.rb"

- name: Precompile Rails assets
  become: true
  shell: bash -lc "rails assets:precompile"
  args:
    chdir: "{{ sample_app_dir }}"
  ignore_errors: true

- name: Restart nginx
  become: true
  service:
    name: nginx
    state: restarted

- name: Start and enable puma service
  become: true
  service:
    name: puma.service
    state: restarted
    enabled: true