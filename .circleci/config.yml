version: 2.1
orbs:
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@1.3.0
  ansible-playbook: orbss/ansible-playbook@0.0.5
jobs:
  cfn-lint:
    executor: python/default
    steps:
      - checkout
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t cloudformation/*.yml

  cloudformation:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: Check CircleCI IP Address
          command: |
            echo "Current CircleCI IP Address:"
            curl ifconfig.me
      - run:
          name: Deploy CloudFormation Stack
          command: |
            MY_CIDR_IP=$(curl -s http://checkip.amazonaws.com)/32
            set -x
            aws cloudformation deploy --template-file cloudformation/Network_Layer.yml --stack-name network
            aws cloudformation deploy --template-file cloudformation/Security_Layer.yml --stack-name security --parameter-overrides MyCidrIp=$MY_CIDR_IP
            aws cloudformation deploy --template-file cloudformation/Application_Layer.yml --stack-name application --capabilities CAPABILITY_NAMED_IAM

  ansible:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install Ansible
          command: |
            sudo apt-get update
            sudo apt-get install -y ansible
      - run:
          name: Run Ansible Playbook
          command: ansible-playbook ansible/playbook.yml -i ansible/inventory.ini

  serverspec:
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - run:
          name: Create .ssh directory if it doesn't exist
          command: mkdir -p ~/.ssh
      - run:
          name: Copy SSH Config
          command: cp sshconfig/config ~/.ssh/
      - run:
          name: List directory to debug2
          command: ls -la
      - run:
          name: Check if Port 22 is Open on EC2 instance
          command: |
            echo "Public IP: $TARGET_HOST"
            nc -zv $TARGET_HOST 22 || exit 1
      - run:
          name: Check for Gemfile
          command: |
            if [ ! -f serverspec/Gemfile ]; then
              echo "Gemfile not found!"
              exit 1
            fi
      - run:
          name: Install Bundler
          command: gem install bundler
      - run:
          name: Configure Bundler Path
          command: |
            cd serverspec
            bundle config set --local path 'vendor/bundle'
      - run:
          name: bundle install
          command: |
            cd serverspec
            bundle install
      - run:
          name: Initialize Serverspec
          command: |
            cd serverspec
            bundle exec serverspec-init
      - run:
          name: execute
          command: |
            cd serverspec
            bundle exec rake spec

workflows:
  version: 2
  raisetech:
    jobs:
      - cfn-lint
      - cloudformation
      - ansible:
          requires:
            - cloudformation
      - serverspec:
          requires:
            - ansible